// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yev.Bonobo.Database;

#nullable disable

namespace Yev.Bonobo.Migrations
{
    [DbContext(typeof(GitDbContext))]
    [Migration("20240811162216_addDefaultRepoAndTag")]
    partial class addDefaultRepoAndTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.DataTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataTags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "default"
                        });
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.RepoDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("AllowAnonymous")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AuditPushUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinksRegex")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinksUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LinksUseGlobal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Repositories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("02f784d8-56a9-45ba-a380-cc7f08e29b37"),
                            AllowAnonymous = false,
                            AuditPushUser = true,
                            Description = "The default repository",
                            DisplayName = "Default",
                            LinksUseGlobal = false,
                            Name = "default",
                            Path = "repos"
                        });
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.RepoToTag", b =>
                {
                    b.Property<Guid>("RepoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DataTagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RepoId", "DataTagId");

                    b.HasIndex("DataTagId");

                    b.ToTable("RepoToTag");
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EntraIdObjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntraIdObjectId = new Guid("da049019-bbfc-480f-9ab6-a16c4829db20"),
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.RepoToTag", b =>
                {
                    b.HasOne("Yev.Bonobo.Database.Entities.DataTag", "Tag")
                        .WithMany("Repos")
                        .HasForeignKey("DataTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yev.Bonobo.Database.Entities.RepoDefinition", "Repo")
                        .WithMany("Tags")
                        .HasForeignKey("RepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repo");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.DataTag", b =>
                {
                    b.Navigation("Repos");
                });

            modelBuilder.Entity("Yev.Bonobo.Database.Entities.RepoDefinition", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
